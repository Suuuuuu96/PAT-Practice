//https://pintia.cn/problem-sets/994805342720868352/problems/994805343043829760
#include<iostream>
#include<vector>
#include<algorithm>
#define Nv 210
using namespace std;
int k,a[Nv];
int vi[Nv]={0};
bool f[Nv]={false};
int m,nv,ne;
vector<vector<int>> ed(Nv,vector<int>(1,0));
void fun()
{
	int i,j,p,te;
	for(i=1;i<=k-1;i++)
	{
		if(ed[a[i]][0]<k-1)
		{
			printf("Not a Clique\n");
			return ;
		}
		p=1;
		for(j=i+1;j<=k;j++)
		{
			while(ed[a[i]][p]!=a[j]&&p<=ed[a[i]][0])
				p++;
			if(ed[a[i]][p]==a[j])
				continue;
			if(p>ed[a[i]][0]&&j<=k)
			{
				printf("Not a Clique\n");return ;
			}
		}
	}
	for(i=1;i<=nv;i++)
	{
		vi[i]=0;
		f[i]=false;
	}
	for(i=1;i<=k;i++)
		f[a[i]]=true;
	for(i=1;i<=k;i++)
	{
		for(j=1;j<=ed[a[i]][0];j++)
		{
			te=ed[a[i]][j]; 
			vi[te]++;
			if(vi[te]>=k&&!f[te])
			{
				printf("Not Maximal\n");return ;
			}
		}
	}
	printf("Yes\n");
}
int main()
{
	int i,j,x,y,t;
	bool lk[Nv]={false};
	bool jia,fi=true;
	scanf("%d%d",&nv,&ne);
	for(i=1;i<=ne;i++)
	{
		scanf("%d%d",&x,&y);
		ed[y].push_back(x);
		ed[y][0]++;
		ed[x].push_back(y);
		ed[x][0]++;
	}
	for(i=1;i<=nv;i++)
		if(ed[i][0])
			sort(ed[i].begin()+1,ed[i].end());
	scanf("%d",&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d",&k);
		for(j=1;j<=k;j++)
			scanf("%d",&a[j]);
		sort(a+1,a+k+1);
		fun();
	}
	return 0;
}
/*
8 10
5 6
7 8
6 4
3 6
4 5
2 3
8 2
2 7
5 3
3 4
6
4 5 4 3 6
3 2 8 7
2 2 3
1 1
3 4 3 6
3 3 2 1
*/
