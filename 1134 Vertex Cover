#include<iostream>
#include<algorithm>
#define N 10010
using namespace std;
struct vex{
	int a,b;
	int nu;
};
bool vis[N];
int bi[N];
vex ve[N],ve2[N];
int n,m,k;
bool fun1(vex v1,vex v2){
	if(v1.a<v2.a)
		return true;
	else if(v1.a==v2.a&&v1.b<v2.b)
		return true;
	return false;
}
bool fun2(vex v1,vex v2){
	if(v1.b<v2.b)
		return true;
	else if(v1.b==v2.b&&v1.a<v2.a)
		return true;
	return false;
}
int main()
{
	int i,j,nv,x,x0;
	cin>>n>>m;
	for(i=0;i<=m-1;i++){
		scanf("%d%d",&ve[i].a,&ve[i].b);
		if(ve[i].a>ve[i].b)
			swap(ve[i].a,ve[i].b);
		ve2[i].a=ve[i].a;
		ve2[i].b=ve[i].b;
		ve2[i].nu=ve[i].nu=i;
	}
	sort(ve,ve+m,fun1);
	sort(ve2,ve2+m,fun2);
	scanf("%d",&k);
	for(i=1;i<=k;i++){
		scanf("%d",&nv);
		for(j=1;j<=nv;j++)
			scanf("%d",&bi[j]);
		int sum=0;
		sort(bi+1,bi+nv+1);
		for(j=0;j<=m-1;j++)
			vis[j]=false;
		for(x=0,j=1;j<=nv;j++){
			for(;bi[j]>=ve[x].a&&x<=m-1;x++)
				if(bi[j]==ve[x].a){
					vis[ve[x].nu]=true;
					sum++;
				}
		}
		for(x=0,j=1;j<=nv;j++){
			for(;x<=m-1&&bi[j]>=ve2[x].b;x++)
				if(bi[j]==ve2[x].b&&!vis[ve2[x].nu])
					sum++;
		}
		if(sum==m)
			printf("Yes\n");
		else 
			printf("No\n");
	}
	return 0;
}
/*
10 11
8 7
6 8
4 5
8 4
8 1
1 2
1 4
9 8
9 1
1 0
2 4
5
4 0 3 8 4
6 6 1 7 5 4 9
3 1 8 4
2 2 8
7 9 8 7 6 5 4 2
*/
